-- [nfnl] fnl/dotfiles/mapping.fnl
local util = require("dotfiles.util")
local nfnl = require("nfnl.api")
local function noremap(mode, from, to)
  return vim.keymap.set(mode, from, to, {noremap = true})
end
local function _1_()
  nfnl["compile-all-files"](vim.fn.stdpath("config"))
  return vim.cmd.source((vim.fn.stdpath("config") .. "/init.lua"))
end
vim.keymap.set("n", "<leader>`", _1_)
noremap("n", "<Enter>", ":nohlsearch<Enter>/<BS>")
noremap("n", "<leader>zz", ":normal! 1z=<cr>")
noremap("i", "<C-V><C-O>", ":set paste<CR><C-R><C-R>+<C-O>:set nopaste<CR>")
noremap("n", "<F5>", "\"=strftime(\"%F\")<CR>p")
noremap("i", "<F5>", "<C-R>=strftime(\"%F\")<CR>")
noremap("n", "<M-5>", "\"=trim(system('date -u'))<CR>p")
noremap("i", "<M-5>", "<C-R>=trim(system('date -u'))<CR>")
noremap("v", "<leader>ah", "S<a href=\"\" target=\"_blank\" rel=\"nopener noreferrer\"><CR>")
noremap("v", "<leader>ml", "xi[<c-r>\"]()<esc>")
noremap("n", "<C-e>", "3<C-e>")
noremap("n", "<C-y>", "3<C-y>")
noremap("n", "<C-k>", "[e")
noremap("n", "<C-j>", "]e")
noremap("v", "<C-k>", "[egv")
noremap("v", "<C-j>", "]egv")
noremap("n", "<leader>jpp", ":%!python -m json.tool --indent=2<CR>")
noremap("c", "w!!", "w !sudo tee % >/dev/null")
noremap("n", "gnh", ":GitGutterNextHunk<CR>")
noremap("n", "gph", ":GitGutterPrevHunk<CR>")
noremap("n", "gsh", ":GitGutterStageHunk<CR>")
noremap("n", "<leader>mv", ":AsyncRun -mode=bang open -a Marked\\ 2.app '%:p'<cr>")
vim.api.nvim_create_autocmd({"FileType"}, {pattern = "sql", command = "nmap <leader>s vap<leader>S"})
noremap("n", "Q", ":.!bash <CR>")
util.lvnoremap("tw", "<C-U>s/\\s\\+$//ge<CR>:nohlsearch<Enter>/<BS>")
util.lnnoremap("tw", "<C-U>.s/\\s\\+$//ge<CR>:nohlsearch<Enter>/<BS>")
util.lnnoremap("<C-k>", ":set scrollback=1 | :set scrollback 100000<cr>", {silent = true})
return util.ltnoremap("<C-k>", "<C-\\><C-n><leader><C-l>i", {silent = true})
